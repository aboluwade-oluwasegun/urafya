// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button component renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LinkListItem
    icon="fa fa-user"
    link="/admin/users"
    linkText="Users"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Link
        className="nav-link"
        replace={false}
        to="/admin/users"
>
        <i
                className="fa fa-user"
        />
        <span>
                Users
        </span>
</Link>,
      "className": "nav-item",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <i
            className="fa fa-user"
/>,
          <span>
            Users
</span>,
        ],
        "className": "nav-link",
        "replace": false,
        "to": "/admin/users",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "fa fa-user",
          },
          "ref": null,
          "rendered": null,
          "type": "i",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Users",
          },
          "ref": null,
          "rendered": "Users",
          "type": "span",
        },
      ],
      "type": [Function],
    },
    "type": "li",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Link
          className="nav-link"
          replace={false}
          to="/admin/users"
>
          <i
                    className="fa fa-user"
          />
          <span>
                    Users
          </span>
</Link>,
        "className": "nav-item",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <i
              className="fa fa-user"
/>,
            <span>
              Users
</span>,
          ],
          "className": "nav-link",
          "replace": false,
          "to": "/admin/users",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "fa fa-user",
            },
            "ref": null,
            "rendered": null,
            "type": "i",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Users",
            },
            "ref": null,
            "rendered": "Users",
            "type": "span",
          },
        ],
        "type": [Function],
      },
      "type": "li",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
